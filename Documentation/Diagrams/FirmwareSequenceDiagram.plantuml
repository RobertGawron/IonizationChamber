@startuml
actor User

participant "Main" as Main
participant "Application Builder" as AppBuilder
participant "Clock Configurator" as Clock
participant "Timer Configurator" as Timer
participant "Logger" as Logger
participant "Measurement Collector" as MeasurementCollector
participant "Measurement Frame" as Frame
participant "Voltage Sensor" as Voltage

User -> Main : Power on the device
Main -> AppBuilder : ApplicationBuilder_Init()
AppBuilder -> Clock : ClockConfigurator_Init()
AppBuilder -> Timer : TimerConfigurator_Init()
AppBuilder -> Logger : Logger_Init()
AppBuilder -> UI : UserInterface_Init()
AppBuilder -> Voltage : RadioactivityMeasurer_Init()
AppBuilder -> MeasurementCollector : MeasurementCollector_Init()

AppBuilder -> UI : UserInterface_ShowMessage(USER_INTERFACE_STATE_OK_MSG)

== Main Loop ==
Main -> AppBuilder : ApplicationBuilder_Run()
loop Wait for interrupt and process
    Main -> AppBuilder : ApplicationBuilder_Tick()
    AppBuilder -> MeasurementCollector : MeasurementCollector_Tick()
    MeasurementCollector -> Voltage : RadioactivityMeasurer_GetConfiguration()
    MeasurementCollector -> Voltage : RadioactivityMeasurer_MeasureValue()
    Voltage -> MeasurementCollector : Measurement Data
    MeasurementCollector -> Frame : MeasurementFrame_Create(configuration, data)
    MeasurementCollector -> Frame : MeasurementFrame_Send(callback)

    Frame -> Logger : Logger_Print(data)
    Logger --> Frame : Acknowledge

    AppBuilder -> UI : UserInterface_Tick()
end
@enduml