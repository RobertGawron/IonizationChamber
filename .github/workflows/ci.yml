name: CI Pipeline

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  combined-job:
    name: Combined Analysis and Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [c-static, python-static, firmware]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Docker Compose installed ONCE per job (not per type)
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build and Start Docker Compose
        run: |
          docker-compose up -d --build

      # Conditional execution based on matrix type
      - name: Run Analysis or Build
        run: |
          case "${{ matrix.type }}" in
            c-static)
              docker-compose exec -T app bash -c "dos2unix /workspace/ContinuousIntegration/run_c_static_code_analysis.sh && bash /workspace/ContinuousIntegration/run_c_static_code_analysis.sh"
              docker cp app:/workspace/build/C_Lint_ReportApplicationOnly.txt .
              docker cp app:/workspace/build/C_Lint_ReportFull.txt .
              ;;
            python-static)
              docker-compose exec -T app bash -c "dos2unix /workspace/ContinuousIntegration/run_python_static_code_analysis.sh && bash /workspace/ContinuousIntegration/run_python_static_code_analysis.sh"
              docker cp app:/workspace/build/python_lint_report .
              ;;
            firmware)
              docker-compose exec -T app bash -c "cd /workspace/build && cmake ../Software/Firmware/ && make -j$(nproc)"
              docker cp app:/workspace/build/IonizationChamber.cdb .
              docker cp app:/workspace/build/IonizationChamber.lk .
              docker cp app:/workspace/build/IonizationChamber.ihx .
              docker cp app:/workspace/build/IonizationChamber.map .
              ;;
          esac

      # Unified artifact uploading
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.type }}-artifacts
          path: |
            ${{ contains(matrix.type, 'static') && '*.txt' || '' }}
            ${{ matrix.type == 'python-static' && 'python_lint_report' || '' }}
            ${{ matrix.type == 'firmware' && 'IonizationChamber.*' || '' }}

      - name: Clean Up Containers
        if: always()
        run: |
          docker-compose down